[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "petre"
version = "2.0.0"
description = "Privacy-preserving Entities Transparency and Re-identification Evaluation"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "PETRE Development Team", email = "petre@example.com"}
]
maintainers = [
    {name = "PETRE Development Team", email = "petre@example.com"}
]
keywords = [
    "privacy", "anonymization", "k-anonymity", "text-processing", 
    "re-identification", "nlp", "machine-learning", "evaluation"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Security",
    "Topic :: Text Processing :: Linguistic",
    "Typing :: Typed"
]
requires-python = ">=3.8"
dependencies = [
    "torch>=1.12.0",
    "transformers>=4.20.0",
    "datasets>=2.0.0",
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "tqdm>=4.64.0",
    "spacy>=3.4.0",
    "en-core-web-lg @ https://github.com/explosion/spacy-models/releases/download/en_core_web_lg-3.7.1/en_core_web_lg-3.7.1-py3-none-any.whl",
    "shap>=0.41.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=0.990",
    "pre-commit>=2.20.0"
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0"
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.8.0"
]

[project.urls]
Homepage = "https://github.com/yamaceay/petre"
Documentation = "https://petre.readthedocs.io"
Repository = "https://github.com/yamaceay/petre.git"
"Bug Tracker" = "https://github.com/yamaceay/petre/issues"
Changelog = "https://github.com/yamaceay/petre/blob/main/CHANGELOG.md"

[project.scripts]
petre = "petre.main:cli_main"
petre-validate = "petre.main:validate_configuration"

[tool.setuptools]
package-dir = {"" = "."}

[tool.setuptools.packages.find]
where = ["."]
include = ["petre*"]
exclude = ["tests*", "docs*"]

[tool.setuptools.package-data]
petre = ["py.typed", "*.json"]

# Development tools configuration

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_context = true
show_column_numbers = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "spacy.*",
    "en_core_web_lg.*",
    "shap.*",
    "datasets.*",
    "transformers.*",
    "torch.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=petre",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["petre"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__main__.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
per-file-ignores = [
    "__init__.py:F401"
]